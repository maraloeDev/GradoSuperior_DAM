--estructura básica de un bloque PL/SQL
declare
	--opcional: declaración de variables
    v_hoy	varchar2(10);
	bandera	boolean := true;
begin
	--obligatoria: área ejectuable
    select sysdate into v_hoy from dual;
	dbms_output.put_line('Hoy es: ' || v_hoy);

	if bandera = true then
        dbms_output.put_line('SI');
	else
        dbms_output.put_line('NO');
	end if;
exception	
    --opcional: manejadores de excepciones
    when others then dbms_output.put_line('ERROR');
end;

desc scott.emp;

--Bloque anónimo de declaración de variables y constantes
declare
	v_nombre 		char(20) := 'Pepe';
	v_apellidos		varchar(50) default 'Perez';
	v_edad			integer not null := 0;
	v_salario		number(7,2);
    iva				constant number := 0.21;    
	v_puesto		scott.emp.job%type;
	reg_emp			scott.emp%rowtype;
begin


end;


if condicion then

--estructura básica de un bloque PL/SQL
declare
	--opcional: declaración de variables
    v_hoy	varchar2(10);
	bandera	boolean := true;
begin
	--obligatoria: área ejectuable
    select sysdate into v_hoy from dual;
	dbms_output.put_line('Hoy es: ' || v_hoy);

	if bandera = true then
        dbms_output.put_line('SI');
	else
        dbms_output.put_line('NO');
	end if;
exception	
    --opcional: manejadores de excepciones
    when others then dbms_output.put_line('ERROR');
end;

desc scott.emp;

--Bloque anónimo de declaración de variables y constantes
declare
	v_nombre 		char(20) := 'Pepe';
	v_apellidos		varchar(50) default 'Perez';
	v_edad			integer not null := 0;
	v_salario		number(7,2);
    iva				constant number := 0.21;    
	v_puesto		scott.emp.job%type;
	reg_emp			scott.emp%rowtype;
begin
	dbms_output.put_line(v_nombre);
	dbms_output.put_line(v_apellidos);
	dbms_output.put_line(v_edad);
	dbms_output.put_line('Salario:' || v_salario);
	dbms_output.put_line(iva);

	select emp.job	into v_puesto from scott.emp where emp.empno=1000;
	dbms_output.put_line(v_puesto);
exception
    when too_many_rows then dbms_output.put_line('Demasiadas filas');
	when no_data_found then dbms_output.put_line('No hay resulado');
end;

select * from scott.emp;

--Bloque anónimo: sintaxis IF
--Mostrar el sueldo final (salario + comisiones) del empleado 'presidente'
declare
	v_sal 	scott.emp.sal%type;
	v_comm	scott.emp.comm%type;
	v_final	number;
begin
	select emp.sal, emp.comm into v_sal, v_comm from scott.emp where upper(emp.job) like 'PRESIDENT';
	if v_comm is null then
        v_final := v_sal;
	else
		v_final := v_sal + v_comm;
	end if;
	dbms_output.put_line('Salario final: ' || v_final);
end;

--select * from scott.dept;

--Bloque anónimo: Mostrar por consola el nombre del departamento (en español)
--ubicado en CHICAGO
declare
	v_departamento_EN	scott.dept.dname%type;
	v_departamento_SP	v_departamento_EN%type;
begin
	select dept.dname into v_departamento_EN from scott.dept where upper(loc) like 'CHICAGO';

	if v_departamento_EN = 'ACCOUNTING' then
		v_departamento_SP := 'CONTABILIDAD';
    elsif v_departamento_EN = 'RESEARCH' then
		v_departamento_SP := 'I+D';
    elsif v_departamento_EN = 'SALES' then
		v_departamento_SP := 'VENTAS';
    elsif v_departamento_EN = 'OPERATIONS' then
		v_departamento_SP := 'OPERACIONES';
	else
		v_departamento_SP := 'OTRO';
    end if;

	dbms_output.put_line(v_departamento_SP);
end;

select * from scott.dept;
--Bloque anónimo: uso de CASE incluido en SELECT
declare
	v_deptno 	scott.dept.deptno%type;
	v_dname		scott.dept.dname%type;
	v_loc		scott.dept.loc%type;
begin
	select dept.deptno, dept.loc, case dept.dname
    								when 'ACCOUNTING' then 'CONTABILIDAD'
    								when 'RESEARCH' then 'I+D'
    								when 'SALES' then 'VENTAS'
    								when 'OPERATIONS' then 'OPERACIONES'
									else 'OTRO'
    							  end case
    into v_deptno, v_loc, v_dname
    from scott.dept;
	/* todas las filas del resultado habría que recorrerlas con un cursor y mostrar el resultado */
end;





















