-- 1. Crea una función que reciba dos números y visualice su suma.

--Primero se realiza el procedimiento (sin param) o funcion (con param)
create or replace function sumaNumeros (numero1 number,  numero2 number) 
return number
is
	v_resultado 	number;
begin
    v_resultado := numero1 + numero2;
	DBMS_OUTPUT.PUT_LINE('La suma de ' || numero1 || ' y ' || numero2 || ' es ' || v_resultado);
return v_resultado;
exception
	when too_many_rows then dbms_output.put_line('Demasiadas filas');
	when no_data_found then dbms_output.put_line('No hay resultados');
	when others then dbms_output.put_line('ERROR');


end sumaNumeros;

--Se realiza un bloque anonimo, imprimiendolo poniendo el nombre de la función

begin
dbms_output.put_line(sumaNumeros(10,2));
end;

-- 2. Crea un procedimiento que reciba una cadena y la visualice alternando cada carácter en mayúsculas y
-- minúsculas. Utiliza los tres tipos de bucles (WHILE, LOOP y FOR).

-- 3. Crea un programa PL/SQL que a partir de un nombre y dos apellidos (separados por espacios), muestre
-- el primer apellido.

-- 4. Crea una función que reciba una fecha y devuelva el año (en número) correspondiente a esa fecha.

-- 5. Crea una función que devuelva el número de años completos que hay entre dos fechas recibidas como
-- parámetros.

-- 6. Crea un procedimiento que reciba una lista de hasta cinco números y visualice su media aritmética.

-- 7. Crea una función reciba como parámetro una cadena y devuelva solamente los caracteres alfabéticos,
-- sustituyendo cualquier otro carácter por blancos.

-- 8. Crea un procedimiento que permita borrar un empleado (tabla EMPLE) cuyo número es recibido como
-- parámetro.

-- 9. Crea un procedimiento que modifique la localidad de un departamento (tabla DEPART). El
-- procedimiento recibirá como parámetros el número del departamento y la nueva localidad.

-- 10. Visualiza todos los procedimientos y funciones del usuario almacenados en la base de datos y su
-- situación (valid o invalid)